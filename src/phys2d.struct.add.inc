// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

auto ann_b2BodyUserData = make_smart<b2BodyUserData_GeneratedAnnotation>(lib);
addAnnotation(ann_b2BodyUserData);
auto ann_b2FixtureUserData = make_smart<b2FixtureUserData_GeneratedAnnotation>(lib);
addAnnotation(ann_b2FixtureUserData);
auto ann_b2JointUserData = make_smart<b2JointUserData_GeneratedAnnotation>(lib);
addAnnotation(ann_b2JointUserData);
auto ann_b2Version = make_smart<b2Version_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Version);
auto ann_b2Mat22 = make_smart<b2Mat22_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Mat22);
auto ann_b2Rot = make_smart<b2Rot_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Rot);
auto ann_b2Transform = make_smart<b2Transform_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Transform);
auto ann_b2Sweep = make_smart<b2Sweep_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Sweep);
auto ann_b2Color = make_smart<b2Color_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Color);
auto ann_b2Draw = make_smart<b2Draw_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Draw);
auto ann_b2Timer = make_smart<b2Timer_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Timer);
auto ann_b2ContactFeature = make_smart<b2ContactFeature_GeneratedAnnotation>(lib);
addAnnotation(ann_b2ContactFeature);
auto ann_b2ContactID = make_smart<b2ContactID_GeneratedAnnotation>(lib);
addAnnotation(ann_b2ContactID);
auto ann_b2ManifoldPoint = make_smart<b2ManifoldPoint_GeneratedAnnotation>(lib);
addAnnotation(ann_b2ManifoldPoint);
auto ann_b2Manifold = make_smart<b2Manifold_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Manifold);
auto ann_b2WorldManifold = make_smart<b2WorldManifold_GeneratedAnnotation>(lib);
addAnnotation(ann_b2WorldManifold);
auto ann_b2ClipVertex = make_smart<b2ClipVertex_GeneratedAnnotation>(lib);
addAnnotation(ann_b2ClipVertex);
auto ann_b2RayCastInput = make_smart<b2RayCastInput_GeneratedAnnotation>(lib);
addAnnotation(ann_b2RayCastInput);
auto ann_b2RayCastOutput = make_smart<b2RayCastOutput_GeneratedAnnotation>(lib);
addAnnotation(ann_b2RayCastOutput);
auto ann_b2AABB = make_smart<b2AABB_GeneratedAnnotation>(lib);
addAnnotation(ann_b2AABB);
auto ann_b2MassData = make_smart<b2MassData_GeneratedAnnotation>(lib);
addAnnotation(ann_b2MassData);
auto ann_b2Shape = make_smart<b2Shape_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Shape);
auto ann_b2ChainShape = make_smart<b2ChainShape_GeneratedAnnotation>(lib);
addAnnotation(ann_b2ChainShape);
auto ann_b2CircleShape = make_smart<b2CircleShape_GeneratedAnnotation>(lib);
addAnnotation(ann_b2CircleShape);
auto ann_b2EdgeShape = make_smart<b2EdgeShape_GeneratedAnnotation>(lib);
addAnnotation(ann_b2EdgeShape);
auto ann_b2PolygonShape = make_smart<b2PolygonShape_GeneratedAnnotation>(lib);
addAnnotation(ann_b2PolygonShape);
auto ann_b2TreeNode = make_smart<b2TreeNode_GeneratedAnnotation>(lib);
addAnnotation(ann_b2TreeNode);
auto ann_b2DynamicTree = make_smart<b2DynamicTree_GeneratedAnnotation>(lib);
addAnnotation(ann_b2DynamicTree);
auto ann_b2Pair = make_smart<b2Pair_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Pair);
auto ann_b2BroadPhase = make_smart<b2BroadPhase_GeneratedAnnotation>(lib);
addAnnotation(ann_b2BroadPhase);
auto ann_b2BodyDef = make_smart<b2BodyDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2BodyDef);
auto ann_b2Body = make_smart<b2Body_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Body);
auto ann_b2Filter = make_smart<b2Filter_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Filter);
auto ann_b2FixtureDef = make_smart<b2FixtureDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2FixtureDef);
auto ann_b2FixtureProxy = make_smart<b2FixtureProxy_GeneratedAnnotation>(lib);
addAnnotation(ann_b2FixtureProxy);
auto ann_b2Fixture = make_smart<b2Fixture_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Fixture);
auto ann_b2ContactRegister = make_smart<b2ContactRegister_GeneratedAnnotation>(lib);
addAnnotation(ann_b2ContactRegister);
auto ann_b2ContactEdge = make_smart<b2ContactEdge_GeneratedAnnotation>(lib);
addAnnotation(ann_b2ContactEdge);
auto ann_b2Contact = make_smart<b2Contact_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Contact);
auto ann_b2Profile = make_smart<b2Profile_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Profile);
auto ann_b2SolverData = make_smart<b2SolverData_GeneratedAnnotation>(lib);
addAnnotation(ann_b2SolverData);
auto ann_b2BlockAllocator = make_smart<b2BlockAllocator_GeneratedAnnotation>(lib);
addAnnotation(ann_b2BlockAllocator);
auto ann_b2ContactManager = make_smart<b2ContactManager_GeneratedAnnotation>(lib);
addAnnotation(ann_b2ContactManager);
auto ann_b2StackEntry = make_smart<b2StackEntry_GeneratedAnnotation>(lib);
addAnnotation(ann_b2StackEntry);
auto ann_b2StackAllocator = make_smart<b2StackAllocator_GeneratedAnnotation>(lib);
addAnnotation(ann_b2StackAllocator);
auto ann_b2DestructionListener = make_smart<b2DestructionListener_GeneratedAnnotation>(lib);
addAnnotation(ann_b2DestructionListener);
auto ann_b2ContactFilter = make_smart<b2ContactFilter_GeneratedAnnotation>(lib);
addAnnotation(ann_b2ContactFilter);
auto ann_b2ContactImpulse = make_smart<b2ContactImpulse_GeneratedAnnotation>(lib);
addAnnotation(ann_b2ContactImpulse);
auto ann_b2ContactListener = make_smart<b2ContactListener_GeneratedAnnotation>(lib);
addAnnotation(ann_b2ContactListener);
auto ann_b2QueryCallback = make_smart<b2QueryCallback_GeneratedAnnotation>(lib);
addAnnotation(ann_b2QueryCallback);
auto ann_b2RayCastCallback = make_smart<b2RayCastCallback_GeneratedAnnotation>(lib);
addAnnotation(ann_b2RayCastCallback);
auto ann_b2World = make_smart<b2World_GeneratedAnnotation>(lib);
addAnnotation(ann_b2World);
auto ann_b2Jacobian = make_smart<b2Jacobian_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Jacobian);
auto ann_b2JointEdge = make_smart<b2JointEdge_GeneratedAnnotation>(lib);
addAnnotation(ann_b2JointEdge);
auto ann_b2JointDef = make_smart<b2JointDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2JointDef);
auto ann_b2Joint = make_smart<b2Joint_GeneratedAnnotation>(lib);
addAnnotation(ann_b2Joint);
auto ann_b2DistanceJointDef = make_smart<b2DistanceJointDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2DistanceJointDef);
auto ann_b2DistanceJoint = make_smart<b2DistanceJoint_GeneratedAnnotation>(lib);
addAnnotation(ann_b2DistanceJoint);
auto ann_b2FrictionJointDef = make_smart<b2FrictionJointDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2FrictionJointDef);
auto ann_b2FrictionJoint = make_smart<b2FrictionJoint_GeneratedAnnotation>(lib);
addAnnotation(ann_b2FrictionJoint);
auto ann_b2GearJointDef = make_smart<b2GearJointDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2GearJointDef);
auto ann_b2GearJoint = make_smart<b2GearJoint_GeneratedAnnotation>(lib);
addAnnotation(ann_b2GearJoint);
auto ann_b2MotorJointDef = make_smart<b2MotorJointDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2MotorJointDef);
auto ann_b2MotorJoint = make_smart<b2MotorJoint_GeneratedAnnotation>(lib);
addAnnotation(ann_b2MotorJoint);
auto ann_b2MouseJointDef = make_smart<b2MouseJointDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2MouseJointDef);
auto ann_b2MouseJoint = make_smart<b2MouseJoint_GeneratedAnnotation>(lib);
addAnnotation(ann_b2MouseJoint);
auto ann_b2PrismaticJointDef = make_smart<b2PrismaticJointDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2PrismaticJointDef);
auto ann_b2PrismaticJoint = make_smart<b2PrismaticJoint_GeneratedAnnotation>(lib);
addAnnotation(ann_b2PrismaticJoint);
auto ann_b2PulleyJointDef = make_smart<b2PulleyJointDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2PulleyJointDef);
auto ann_b2PulleyJoint = make_smart<b2PulleyJoint_GeneratedAnnotation>(lib);
addAnnotation(ann_b2PulleyJoint);
auto ann_b2RevoluteJointDef = make_smart<b2RevoluteJointDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2RevoluteJointDef);
auto ann_b2RevoluteJoint = make_smart<b2RevoluteJoint_GeneratedAnnotation>(lib);
addAnnotation(ann_b2RevoluteJoint);
auto ann_b2WeldJointDef = make_smart<b2WeldJointDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2WeldJointDef);
auto ann_b2WeldJoint = make_smart<b2WeldJoint_GeneratedAnnotation>(lib);
addAnnotation(ann_b2WeldJoint);
auto ann_b2WheelJointDef = make_smart<b2WheelJointDef_GeneratedAnnotation>(lib);
addAnnotation(ann_b2WheelJointDef);
auto ann_b2WheelJoint = make_smart<b2WheelJoint_GeneratedAnnotation>(lib);
addAnnotation(ann_b2WheelJoint);
